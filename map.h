#pragma once

//1ブロックのサイズ
static const float blockSize = 1.0f;
//横マスの数
static const int mapWidth = 9;
//縦マスの数
static const int mapHeight = 9;
//一面のブロック数
static const int oneSideBlockNum = mapWidth * mapHeight;
//総ブロック数
static const int totalBlockNum = oneSideBlockNum * 6;

//マップ

//上
static const int mapTop[mapWidth][mapHeight] = {
			  /*後*/

		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
/*左*/	{0,0,0,0,0,0,0,0,0},	/*右*/
		{0,0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,1,1,0},
		{0,0,0,0,0,0,0,0,0},

			  /*前*/
};

//右
static const int mapRight[mapWidth][mapHeight] = {
			  /*後*/

		{0,0,1,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0,0},
/*上*/  {0,0,1,0,0,0,0,0,0},	/*下*/
		{0,0,1,0,0,0,0,0,0},
		{0,1,1,0,0,0,0,0,0},
		{1,1,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},

			  /*前*/
};

//左
static const int mapLeft[mapWidth][mapHeight] = {
			  /*後*/

		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
/*下*/  {1,1,0,0,0,0,0,0,0},	/*上*/
		{1,1,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},

			  /*前*/
};

//前
static const int mapFront[mapWidth][mapHeight] = {
			  /*上*/

		{0,0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
/*左*/  {0,0,0,0,0,0,0,0,0},	/*右*/
		{0,0,0,0,1,0,1,0,0},
		{0,0,0,0,1,1,1,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},

			  /*下*/
};

//後
static const int mapBehind[mapWidth][mapHeight] = {
			  /*上*/

		{0,0,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0},
/*右*/  {1,0,0,0,0,0,0,0,0},	/*左*/
		{1,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0,0},

			  /*下*/
};

//下
static const int mapBottom[mapWidth][mapHeight] = {
			    /*後*/

		{1,1,1,1,1,0,0,1,1},
		{0,0,0,1,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0},
/*左*/  {0,0,0,1,0,0,0,0,0},	/*右*/
		{0,0,0,1,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0},
		{0,1,1,1,1,1,1,1,0},

			  /*前*/
};

